{"/API/animals":{"title":"Animal","data":{"":"Module to generate animal related data.","overview#Overview":"For a general type of animal (e.g. 'dog'), use animal().Otherwise, use one of the more specific methods, such as cat() for a specific breed of cat.All values may be localized.","bear#bear":"Returns a random bear species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::bear::bear())\n}\nView Source","bird#bird":"Returns a random bird species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::bird::bird())\n}\nView Source","cat#cat":"Returns a random cat species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::cat::cat())\n}\nView Source","cetacean#cetacean":"Returns a random cetacean species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::cetacean::cetacean())\n}\nView Source","cow#cow":"Returns a random cow species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::cow::cow())\n}\nView Source","crocodilia#crocodilia":"Returns a random crocodilia species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::crocodilia::crocodilia())\n}\nView Source","dog#dog":"Returns a random dog species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::dog::dog())\n}\nView Source","fish#fish":"Returns a random fish species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::fish::fish())\n}\nView Source","horse#horse":"Returns a random horse species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::horse::horse())\n}\nView Source","insect#insect":"Returns a random insect species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::insect::insect())\n}\nView Source","lion#lion":"Returns a random lion species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::lion::lion())\n}\nView Source","rabbit#rabbit":"Returns a random rabbit species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::rabbit::rabbit())\n}\nView Source","rodent#rodent":"Returns a random rodent species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::rodent::rodent())\n}\nView Source","snake#snake":"Returns a random snake species.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::snake::snake())\n}\nView Source","animal#animal":"Returns a random animal.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::animal::animals::animal())\n}\nView Source"}},"/API/business/appliances":{"title":"Appliances","data":{"":"Module to generate appliance related data.","overview#Overview":"Generate a random appliace brand or equipment.","brand#brand":"Returns a random appliance brand.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::appliances::brand())\n}\n//LG\nView Source","equipment#equipment":"Returns a random appliance equipment.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::appliances::equipment())\n}\n//Air purifier\nView Source"}},"/API/business/business":{"title":"Business","data":{"":"Module to generate business related data.","overview#Overview":"Generate a random business category.","category#category":"Returns a random business category.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::business::category())\n}\n//Aerospace company\nView Source"}},"/API/business/commerce":{"title":"Commerce","data":{"":"Module to generate commerce related data.","overview#Overview":"Capable of generating serveral commerce related data such as departments, materials and products.","department#department":"Returns a random commerce department.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::commerce::department())\n}\n//Books\nView Source","product_adjective#product_adjective":"Returns a random product adjective.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::commerce::product_adjective())\n}\n//Ergonomic\nView Source","material#material":"Returns a random material.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::commerce::material())\n}\n//Plastic\nView Source","product#product":"Returns a random product.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::commerce::product())\n}\n//Chair\nView Source","promotion_code_adjective#promotion_code_adjective":"Returns a random promotion code adjective.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::commerce::promotion_code_adjective())\n}\n//Special\nView Source","promotion_code_noun#promotion_code_noun":"Returns a random promotion code noun.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::commerce::promotion_code_noun())\n}\n//Discount\nView Source","brand_commerce#brand_commerce":"Returns a random commerce brand.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::commerce::brand_commerce())\n}\n//Samsung\nView Source","vendor#vendor":"Returns a random commerce vendor.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::commerce::vendor())\n}\n//Amazon\nView Source","full_promotion_code#full_promotion_code":"Returns combined string with a promotion code adjective and noun.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::commerce::full_promotion_code())\n}\n//Special Discount\nView Source"}},"/API/business/industry_segments":{"title":"Industry Segments","data":{"":"Module to generate data about industry segments.","overview#Overview":"Capable of generating data about industry segments.","industry#industry":"Returns a random industry type.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::industry_segments::industry())\n}\n//Oil & Gas\nView Source","super_sector#super_sector":"Returns a random super sector industry type.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::industry_segments::super_sector())\n}\n//Health Care\nView Source","sector#sector":"Returns a random sector industry type.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::industry_segments::sector())\n}\n//Chemicals\nView Source","sub_sector#sub_sector":"Returns a random subsector industry type.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::industry_segments::sub_sector())\n}\n//Renewable Energy Equipment\nView Source"}},"/API/business/marketing":{"title":"Marketing","data":{"":"Module to generate data about marketing.","overview#Overview":"Generate a random marketing buzzword.","marketing_buzzword#marketing_buzzword":"Returns a random marketing buzzword.Returns: string\nuse data_faking::locales::en as faking;\nfn main() {\n    println!(\"{}\", faking::business::industry_segments::industry())\n}\n//bleeding edge\nView Source"}},"/":{"title":"Getting Started","data":{"":"Generate massive amounts of fake (but realistic) data for testing and development.\nTry using our playground for your data gen needs, it supports code gen for much more than rust and javascript.","features#Features":"Defaults data types - numbers, lorem ipsum, bools, uuids\nPeople - generate names, emails, jobs\nLocations - generate addresses for north america (more coming soon), and coordinates\nVarious media - games, show, and books from across the globe\nAPI data - generate data resembling real apis (ex. stripe)\nNote: We try to generate realistic data. The generated names, addresses, emails, phone numbers, and/or other data might be coincidentally valid information. Please do not send any of your messages / calls to them from your test setup.","usage-rust#Usage Rust":"cargo add data-faking\nuse data_faking as faking;\nfn main() {\n  println!(\"{}\", faking::defaults::types::f64());\n}","usage-javascript--typescript#Usage Javascript / Typescript":"npm i --save-dev data-faking\nimport * as faking from \"data-faking\";\nconsole.log(faking.f64());","randomness-seed#Randomness seed":"If you want consistent results, you can set your own seed:\nfaking::utils::seeder::set_seed(2);\nprintln!(\"{}\", faking::defaults::types::f64());\nfaking.set_seed(BigInt(2));\nconsole.log(faking.f64());","unsupported-seeded-generation#Unsupported Seeded Generation":"The following data generators do not support seeded generation (currently):\nUUIDs, any.\nDateTime: Naive Date (Before Today | After Today)."}}}